SOME ASSIGNMENT ARE NOT IN ORDER


ASSIGNMENT 1: (CHECKING IF SENTENCE HAVE ALL ALPHABETS)

DECLARE Str1 : String
        DECLARE alpha : String
        DECLARE ispangram : Boolean
        DECLARE thischar : CHARACHTER
        DECLARE i : Integer
        DECLARE thischarpos : Integer



        Str1 <== ""
        alpha <== "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        ispangram <== True
        thischar <== ''
        i <== 0
        thischarpos <== 0


        OUTPUT("Enter Sentence: ")
        INPUT Str1
        Str1 = UPPERCase(Str1)

        For i = 1 To Length(alpha)
            thischar = Mid(alpha, i, 1)
            thischarpos = LOCATE(Str1, thischar)

            If thischarpos = 0 
              Then
                ispangram = False
                Exit For

            End If

        Next

        If ispangram = True 
           Then
            OUTPUT("The Entered Sentence contain all alphabets")
        Else
            OUTPUT("Entered sentence does not contain all alphabets")
        End If




ASSIGNMENT 2:(donouts)
DECLARE donots : Integer


donots <== 0

OUTPUT "Enter Number of Donouts: "
INPUT donots
            If donots < 10 
             Then
               OUTPUT "The Number of donouts: ",donots
                ElseIf donots >= 10 Then
                  OUTPUT "The number of donouts: Many"

         End If
      END If


ASSIGNMENT 3:(Replace)
DECLARE Str1, Str2 : String
DECLARE char1, thischar, char2 : CHARACHTER
DECLARE i : Integer

Str1 <== ""
Str2 <== ""
char1 <== ''
thischar <== ''
i <== 0
char2 <== ''

  OUTPUT "Please enter sentence: "
     INPUT Str1
        OUTPUT "Please enter the charachter you want to remove: "
        INPUT char1
        OUTPUT "Please enter the charachter you want to remove with: "
        INPUT char2

        For i = 1 To Length(Str1)                        
            thischar = Mid(Str1, i, 1)
            If thischar = char1 
               Then
                Str2 = Str2 + char2
            Else : Str2 = Str2 + thischar

            End If
        Next
        OUTPUT "Processed String is: ", Str2


ASSIGNMENT 4:(characher appear most time)
DECLARE highchar, char1, char2 : CHARACHTER
DECLARE count1, count2, highest, Count : Integer
DECLARE sentence : String

        sentence <== ""
        highchar <== ''
        char1 <== ''
        char2 <== ''
        count1 <== 0
        count2 <== 0
        highest <== 0
        Count <== 0

        OUTPUT "Enter the sentence: "
        INPUT sentence

        For count1 = 1 To Length(sentence)
            char1 = Mid(sentence, count1, 1)
            Count = 0
            For count2 = 1 To Len(sentence)
                char2 = Mid(sentence, count2, 1)
                If char1 = char2 
                     Then Count = Count + 1

                If Count > highest 
                       Then
                    highchar = char2
                    highest = Count

                End If
            Next
        Next

        OUTPUT UCase(highchar) , " " , "is occuring" , " " & highest , " " , "times in your sentence."



ASSIGNMENT 5:(vowels)
 DECLARE Str1 : String
 DECLARE vowelcounter : Integer
 DECLARE i : Integer
 DECLARE thischar : CHARACHTER

        Str1 <== ""
        vowelcounter <== 0
        i <== 0
        thischar <== ''


        OUTPUT("enter text: ")
        INPUT Str1
        Str1 = UPPERCASE(Str1)

        For i = 1 To Len(Str1)
            thischar = Mid(Str1, i, 1)

            If thischar = "A" Or thischar = "E" Or thischar = "I" Or thischar = "O" Or thischar = "U" 
                 Then
                vowelcounter = vowelcounter + 1
            End If


        Next
        OUTPUT("Number of vowels are " & vowelcounter)


ASSIGNMENT 6:(both ends)

DECLARE Str1, Str2 : String
DECLARE F2, L2 : String
DECLARE Length : Integer


        Str1 <== ""
        Str2 <== ""
        F2 <== ""
        L2 <== ""
        Length <== 0


        OUTPUT("Enter String: ")
        INPUT Str1
        Length = Length(Str1)

        If Length <= 2 
             Then
            OUTPUT("The Processed String is: ", Str1)
        ElseIf Length > 2 
             Then
            F2 = Left(Str1, 2)
            L2 = Right(Str1, 2)
            Str2 = F2 + L2

            OUTPUT("The processed String is: ", Str2)

        End If

ASSIGNMENT 7:(fix start)

DECLARE Str1, Str2 : String
        DECLARE firstchar, samechar : CHARACHTER
        DECLARE i : Integer

        Str1 <== ""
        Str2 <== ""
        firstchar <== ''
        i <== 0
        samechar <== ''


        OUTPUT("Enter String: ")
        INPUT Str1
        firstchar = Mid(Str1, 1, 1)
        Str2 = Str2 + firstchar


        For i = 2 To Len(Str1)
            samechar = Mid(Str1, i, 1)

            If samechar = firstchar 
                 Then
                Str2 = Str2 + "*"
            Else : Str2 = Str2 + samechar

            End If
        Next
        OUTPUT("The processed String is: ", Str2)

ASSIGNMENT 8:(Counting alphabets,digits,sccase)
 DECLARE Str1 : String
        DECLARE alphacounter, digitscounter, sccasecounter, i : Integer
        DECLARE thischar : CHARACHTER

        Str1 <== ""
        alphacounter <== 0
        digitscounter <== 0
        sccasecounter <== 0
        i <== 0
        thischar <== ''

        OUTPUT("Enter Sentence: ")
        INPUT Str1
        Str1 = UPPERCase(Str1)

        For i = 1 To Len(Str1)
            thischar = Mid(Str1, i, 1)

            If thischar >= 'A' And thischar <= 'Z' Then
                alphacounter = alphacounter + 1
               ElseIf thischar >= "0" And thischar <= "9" Then
                   digitscounter = digitscounter + 1
                     Else
                       sccasecounter = sccasecounter + 1

                    END If
               END if
             END if
        Next
        OUTPUTLine("The Number of alphabets in entered sentence are: " ,alphacounter)
        OUTPUTLine("The Number of digits in entered sentence are: " ,digitscounter)
        OUTPUTLine("The Number of specialcasecharachter in entered sentence are: " ,sccasecounter)

ASSIGNMENT 9:(Mixup)
DECLARE Str1, Str2, Str3 : String
        DECLARE Fchar, Schar, Fchar2, Schar2 : CHARACHTER
        DECLARE RStr1, Rstr2 : String

        Str1 <== ""
        Str2 <== ""
        Fchar <== ''
        Schar <== ''
        Str3 <== ""
        Schar2 <== ''
        Fchar2 <== ''
        RStr1 <== ""
        Rstr2 <== ""



        OUTPUT("Enter First Text: ")
        INPUT Str1
        OUTPUT("Enter Second Text: ")
        INPUT Str2

        Fchar = Mid(Str1, 1, 1)
        Schar = Mid(Str1, 2, 1)

        Fchar2 = Mid(Str2, 1, 1)
        Schar2 = Mid(Str2, 2, 1)

        RStr1 = Mid(Str1, 3, Len(Str1))
        Rstr2 = Mid(Str2, 3, Len(Str2))

        Str3 = Fchar2 + Schar2 + RStr1 + " " + Fchar + Schar + Rstr2
        OUTPUT("Processed String is: ",Str3)



ASSIGNMENT !0:(verbing)
DECLARE Str1, Str2, L3, UL3 : String
        DECLARE length : Integer

        Str1 <== ""
        Str2 <== ""
        L3 <== ""
        length <== 0
        UL3 <== ""


        OUTPUT("add Text: ")
        INPUT Str1

        length = Length(Str1)
        L3 = Right(Str1, 3)
        UL3 = UCase(L3)


        If length < 3 Then
            Str2 = Str2 + Str1
        ElseIf length >= 3 And UL3 = "ING" Then
            Str2 = Str2 + Str1 + "ly"
        ElseIf length >= 3 Then
            Str2 = Str2 + Str1 + "ing"

        End If
        OUTPUT("The processed text is: " & Str2)


ASSIGNMENT 11:(not_bad)

DECLARE Str1, Str2, UStr1, FStr1, Lstr1 : String
        DECLARE notpos, badpos : Integer

        Str1 <== ""
        UStr1 <== ""
        Str2 <== ""
        notpos <== 0
        badpos <== 0
        FStr1 <== ""
        Lstr1 <== ""



        OUTPUT("Enter Text: ")
        INPUT Str1
        UStr1 = UPPERCase(Str1)

        notpos = LOCATE(UStr1, "NOT")
        badpos = LOCATE(UStr1, "BAD")


       If notpos = 0 Or badpos = 0 Then
            Str2 = Str2 + Str1
          ElseIf notpos > badpos Then
            Str2 = Str2 + Str1
             ElseIf notpos < badpos Then
               FStr1 = Left(Str1, notpos - 1)
               Lstr1 = Right(Str1, Len(Str1) - badpos - 2)
               Str2 = Str2 + FStr1 + "good" + Lstr1
                 
               END if
             END if
        End If


        OUTPUT("Processed text is: " & Str2)













       